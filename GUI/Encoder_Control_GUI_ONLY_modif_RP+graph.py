# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Encoder_Control_GUI_ONLY_modif_RP.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#fortement inspiré de: https://www.youtube.com/watch?v=Fk1TBoBcrR4&list=LL7klEEqnwSAUvihtsM3fGtg à plusieurs reprises
#et de https://www.mfitzp.com/tutorials/plotting-matplotlib/


from PyQt5 import QtCore, QtGui, QtWidgets
from lib.Encoder_Control_GUI_ONLY import Ui_Tester
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
from matplotlib.figure import Figure
import random


class MplCanvas(FigureCanvasQTAgg):

    def __init__(self, parent=None, width=5, height=4, dpi=100):
        fig = Figure(figsize=(width, height), dpi=dpi)
        self.axes = fig.add_subplot(111)
        super(MplCanvas, self).__init__(fig)


class Ui_Style(Ui_Tester):

    def dialogStyle(self):
        style, choix = QtWidgets.QFontDialog.getFont()

        if choix:
            self.tabWidget.setFont(style)
            Tester.setFont(style)

    def styleDefault(self):
        self.tabWidget.setFont(QtGui.QFont("shelldlg2", 8))
        Tester.setFont(QtGui.QFont("shelldlg2", 8))

    #def modeSombre(self):
    #    Tester.setStyleSheet("background-color : black; color : white")

    #def modeClair(self):
     #   Tester.setStyleSheet("background-color : white; color : black")




    def setupUi(self, Tester):
        super().setupUi(Tester)



        self.label33 = QtWidgets.QLabel("Remerciements:")
        self.verticalLayout_5.addWidget(self.label33)

        self.Liste = QtWidgets.QListWidget()
        self.Liste.insertItem(0, "Adrien Pajon")
        self.Liste.insertItem(1, "Raymond-Pierre Bouchard")
        self.Liste.insertItem(2, "William Ricardo Bonilla Villatero")
        self.verticalLayout_5.addWidget(self.Liste)



        self.tabWidget.addTab(self.tab_4, "")
        self.gridLayout_6.addWidget(self.tabWidget, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_6, 0, 0, 1, 1)
        self.CloseButton = QtWidgets.QPushButton(self.centralwidget)
        self.CloseButton.setObjectName("CloseButton")
        self.gridLayout_2.addWidget(self.CloseButton, 0, 1, 1, 1, QtCore.Qt.AlignBottom)
        Tester.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(Tester)
        self.menuBar.setEnabled(True)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 720, 26))
        self.menuBar.setObjectName("menuBar")
        self.menuAide = QtWidgets.QMenu(self.menuBar)
        self.menuAide.setObjectName("menuAide")
        self.menuAffichage = QtWidgets.QMenu(self.menuBar)
        self.menuAffichage.setObjectName("menuAffichage")

        self.menuCouleur = QtWidgets.QMenu(self.menuAffichage)
        self.menuCouleur.setObjectName("menuCouleur")

        self.menuFont = QtWidgets.QMenu(self.menuAffichage)
        self.menuFont.setObjectName("menuFont")

        self.menuLanguage_2 = QtWidgets.QMenu(self.menuAffichage)
        self.menuLanguage_2.setObjectName("menuLanguage_2")
        Tester.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(Tester)
        self.statusBar.setObjectName("statusBar")
        Tester.setStatusBar(self.statusBar)
        self.actionFR = QtWidgets.QAction(Tester)
        self.actionFR.setCheckable(True)
        self.actionFR.setObjectName("actionFR")
        self.actionENG = QtWidgets.QAction(Tester)
        self.actionENG.setCheckable(True)
        self.actionENG.setObjectName("actionENG")
        self.actionRepo = QtWidgets.QAction(Tester)
        self.actionRepo.setObjectName("actionRepo")

        self.actionStyle = QtWidgets.QAction(Tester)
        self.actionStyle.setCheckable(False)
        self.actionStyle.setObjectName("actionStyle")
        self.actionStyle.setShortcut("CTRL+M")
        self.actionStyle.setText("Modifier le style")
        self.actionStyle.triggered.connect(self.dialogStyle)

        self.actionStyleDefault = QtWidgets.QAction(Tester)
        self.actionStyleDefault.setCheckable(False)
        self.actionStyleDefault.setObjectName("actionStyleDefault")
        self.actionStyleDefault.setShortcut("CTRL+D")
        self.actionStyleDefault.setText("Style par défaut")
        self.actionStyleDefault.triggered.connect(self.styleDefault)

        self.actionCouleur = QtWidgets.QAction(Tester)
        self.actionCouleur.setCheckable(False)
        self.actionCouleur.setObjectName("actionCouleur")
        self.actionCouleur.setShortcut("CTRL+P")
        self.actionCouleur.setText("Palette de couleurs")

        self.actionMode_clair = QtWidgets.QAction(Tester)
        self.actionMode_clair.setCheckable(True)
        self.actionMode_clair.setObjectName("actionMode_clair")
        self.actionMode_clair.setShortcut("CTRL+C")
        #self.actionMode_clair.triggered.connect(self.modeClair)

        self.actionMode_sombre = QtWidgets.QAction(Tester)
        self.actionMode_sombre.setCheckable(True)
        self.actionMode_sombre.setObjectName("actionMode_sombre")
        self.actionMode_sombre.setShortcut("CTRL+S")
        self.actionMode_sombre.setText("Mode sombre")
        #self.actionMode_sombre.triggered.connect(self.modeSombre)


        self.actionFR_2.setIcon(QtGui.QIcon('images/drapeauFrance.png'))
        self.actionFR_2.setShortcut("CTRL+F")


        self.actionENG_2.setIcon(QtGui.QIcon('images/drapeauGB.jpg'))
        self.actionENG_2.setShortcut("CTRL+E")

        self.menuCouleur.addAction(self.actionMode_clair)
        self.menuCouleur.addAction(self.actionMode_sombre)

        self.menuLanguage_2.addAction(self.actionFR_2)
        self.menuLanguage_2.addAction(self.actionENG_2)

        self.menuAffichage.addMenu(self.menuFont)
        self.menuFont.addAction(self.actionStyle)
        self.menuFont.addAction(self.actionStyleDefault)
        self.menuFont.setTitle("Modifier le style")

        self.menuCouleur.addAction(self.actionCouleur)
        self.menuAffichage.addAction(self.menuCouleur.menuAction())
        self.menuAffichage.addSeparator()
        self.menuAffichage.addAction(self.menuLanguage_2.menuAction())
        self.menuBar.addAction(self.menuAffichage.menuAction())
        self.menuBar.addAction(self.menuAide.menuAction())

        self.retranslateUi(Tester)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(Tester)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Tester = QtWidgets.QMainWindow()
    ui = Ui_Style()
    ui.setupUi(Tester)
    Tester.show()
    sys.exit(app.exec_())
